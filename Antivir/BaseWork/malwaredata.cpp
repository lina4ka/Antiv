#include "malwaredata.h"


MalwareData::MalwareData(string path, string sign)
{
    br.reset(new BaseReader(sign,path));
}

bool MalwareData::isCorrect()
{
    return br->isFile();
}

bool MalwareData::readData()
{
    data.clear();
    vector<RecordInfo> temp = br->get();
    for (auto const& el : temp)
        data[el.prefix] = el;
    return temp.size();
}

RecordInfo MalwareData::isExist(string prefix)
{
    uint64_t temp;
    memcpy(&temp,prefix.data(),sizeof (temp));
    return isExist(temp);
}

size_t MalwareData::getSize()
{
    return data.size();
}

vector<RecordInfo> MalwareData::getList()
{
    vector<RecordInfo> result;
    for(auto const& el : data)
        result.emplace_back(el.second);
    return result;
}

RecordInfo MalwareData::isExist(uint64_t prefix)
{
    auto res = data.find(prefix);
    if (res==data.end())
        return RecordInfo("","",0,0,"");
    return res->second;
}
